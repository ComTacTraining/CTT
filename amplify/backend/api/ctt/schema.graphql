type Evolution 
  @model
  @auth(rules: [
      {allow: groups, groups: ["Administrators"], queries: null, mutations: [create, update, delete]},
      {allow: groups, groups: ["Members"], queries: [get, list], mutations: null}
    ])
{
  id: ID!,
  category: Category!,
  construction: [Construction],
  street: String!,
  size: Size!,
  stories: Int!,
  occupancy: String!,
  conditions: Location!,
  entryEgress: [Location],
  survivability: Survivability!,
  placement: Location!,
  side: Location!,
  flow: Flow!,
  fire: Fire!,
  exhaust: Location!,
  smoke: Smoke!
  withstanding: Boolean!,
  attack: Boolean!,
  ventilation: Boolean!,
  exposure: Boolean!,
  ric: Boolean!,
  medical: Boolean!,
}
type Member 
  @model
  @auth(rules: [
      {allow: groups, groups: ["Administrators"], queries: null, mutations: [create, update, delete]},
      {allow: groups, groups: ["Members"], queries: [get, list], mutations: [update]}
    ])
{
  id: ID!
  alias: String
  department: String
  rank: String
  expiration: Int
  alarms: [Alarm] @connection(name: "MemberAlarms")
  simulations: [Simulation] @connection(name: "MemberSimulations")
}
type Alarm 
  @model
  @auth(rules: [
      {allow: owner },
      {allow: groups, groups: ["Administrators"], queries: null, mutations: [create, update, delete]},
      {allow: groups, groups: ["Members"], queries: [get, list], mutations: [create, update, delete]}
    ])
{
  id: ID!
  unit: [String]
  officer: String
  member: Member @connection(name: "MemberAlarms")
}
type Incident 
  @model
  @auth(rules: [
      {allow: groups, groups: ["Administrators"], queries: null, mutations: [create, update, delete]},
      {allow: groups, groups: ["Members"], queries: [get, list], mutations: null}
    ])
{
  id: ID!
  title: String!
  icsNims: IcsNims! 
  command: String!
}
type Simulation 
  @model
  @auth(rules: [
      {allow: groups, groups: ["Administrators"], queries: null, mutations: [create, update, delete]},
      {allow: groups, groups: ["Members"], queries: [get, list], mutations: null}
    ])
{
  id: ID!
  member: Member @connection(name: "MemberSimulations")
  link: String
  reviews: [Review]
}
type Review 
  @model
  @auth(rules: [
      {allow: groups, groups: ["Administrators"], queries: null, mutations: [create, update, delete]},
      {allow: groups, groups: ["Members"], queries: [get, list], mutations: null}
    ])
{
  id: ID!
  member: Member
  message: String
}
enum Category {
  COMMERCIAL_LEGACY
  COMMERCIAL_MODERN
  INDUSTRIAL_LEGACY
  INDUSTRIAL_MODERN
  MULTI_FAMILY_LEGACY
  MULTI_FAMILY_MODERN
  SINGLE_FAMILY_LEGACY
  SINGLE_FAMILY_MODERN
}
enum Construction {
  LEGACY
  MODERN
  BLOCK
  METAL_CLAD
  ORDINARY
  WOOD_FRAME
  CONCRETE_TILT_UP
  CONVENTIONAL
  LIGHTWEIGHT
}
enum Size {
  SMALL
  MEDIUM
  LARGE
  EXTRA_LARGE
}
enum Location {
  ALPHA
  BRAVO
  CHARLIE
  DELTA
  ROOF
  FULLY_INVOLVED
}
enum Survivability {
  POSITIVE
  NEGATIVE
  MARGINAL
}
enum Flow {
  UNI_DIRECTIONAL
  BI_DIRECTIONAL
}
enum Fire {
  ROOM_CONTENTS
  STRUCTURE
}
enum Smoke {
  GRAY_LAMINAR
  GRAY_TURBULENT
  BROWN_LAMINAR
  BROWN_TURBULENT
  BLACK_LAMINAR
  BLACK_TURBULENT
}
enum IcsNims {
  COMMAND
  WATER
  FIRE_ATTACK
  VENTILATION
  EXPOSURE
  RIC
  MEDICAL
}